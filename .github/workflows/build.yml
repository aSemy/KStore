name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  build-matrix:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - id: set-matrix
        run: echo "::set-output name=kotlin_test_tasks::$(./gradlew -q listKotlinTestTasks)"

    outputs:
      kotlin_test_tasks: ${{ steps.set-matrix.outputs.kotlin_test_tasks }}


  kotlin-tests:
    runs-on: macos-latest
    needs: build-matrix
    strategy:
      matrix:
        kotlin_test_task: ${{ fromJson(needs.build-matrix.outputs.kotlin_test_tasks) }}
      fail-fast: false # in case one test fails, we still want to see results from others
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Kotlin test ${{ matrix.kotlin_test_task }}
        run: ./gradlew ${{ matrix.kotlin_test_task }}


  check:
    runs-on: macos-latest
    needs: kotlin-tests
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Gradle check
        run: ./gradlew check


  build:
    runs-on: macos-latest
    needs: check
    steps:

      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false


      - name: Check api
        run: ./gradlew check

      - name: Write secrets to local.properties
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo sonatypeUsername="${SONATYPE_USERNAME}" >> "local.properties"
          echo sonatypePassword="${SONATYPE_PASSWORD}" >> "local.properties"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Publish to sonatype
        if: ${{ github.event_name != 'pull_request' }}
        run: ./gradlew publishAllPublicationsToMavenRepository
